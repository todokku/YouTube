module.exports = {
  plugins: [
    'stylelint-order',
  ],
  rules: {
    'order/order': [
      [
        'dollar-variables',
        'custom-properties',
        'declarations',
        'at-rules',
        'rules',
      ],
      {
        unspecified: 'bottom',
      },
    ],
    'order/properties-order': [
      [
        // content & quote
        {
          emptyLineBefore: 'threshold',
          properties: [
            'content',
            'quotes',
          ],
        },
        // Positioning
        {
          emptyLineBefore: 'threshold',
          properties: [
            'position',
            'top',
            'right',
            'bottom',
            'left',
            'z-index',
          ],
        },
        // Box Model
        {
          emptyLineBefore: 'threshold',
          properties: [
            'display',
            'flex',
            'flex-basis',
            'flex-direction',
            'flex-flow',
            'flex-grow',
            'flex-shrink',
            'flex-wrap',
            'grid',
            'grid-area',
            'grid-auto-rows',
            'grid-auto-columns',
            'grid-auto-flow',
            'grid-gap',
            'grid-row',
            'grid-row-start',
            'grid-row-end',
            'grid-row-gap',
            'grid-column',
            'grid-column-start',
            'grid-column-end',
            'grid-column-gap',
            'grid-template',
            'grid-template-areas',
            'grid-template-rows',
            'grid-template-columns',
            'gap',
            'align-content',
            'align-items',
            'align-self',
            'justify-content',
            'justify-items',
            'justify-self',
            'order',
            'float',
            'clear',
            'box-sizing',
            'width',
            'min-width',
            'max-width',
            'height',
            'min-height',
            'max-height',
            'margin',
            'margin-top',
            'margin-right',
            'margin-bottom',
            'margin-left',
            'padding',
            'padding-top',
            'padding-right',
            'padding-bottom',
            'padding-left',
            'overflow',
            'overflow-x',
            'overflow-y',
          ],
        },
        // Visual
        {
          emptyLineBefore: 'threshold',
          properties: [
            'border',
            'border-color',
            'border-style',
            'border-width',
            'border-top',
            'border-top-color',
            'border-top-width',
            'border-top-style',
            'border-right',
            'border-right-color',
            'border-right-width',
            'border-right-style',
            'border-bottom',
            'border-bottom-color',
            'border-bottom-width',
            'border-bottom-style',
            'border-left',
            'border-left-color',
            'border-left-width',
            'border-left-style',
            'border-radius',
            'border-top-left-radius',
            'border-top-right-radius',
            'border-bottom-right-radius',
            'border-bottom-left-radius',
            'border-image',
            'border-image-source',
            'border-image-slice',
            'border-image-width',
            'border-image-outset',
            'border-image-repeat',
            'border-collapse',
            'border-spacing',
            'list-style',
            'list-style-position',
            'list-style-type',
            'list-style-image',
            'table-layout',
            'empty-cells',
            'caption-side',
            'background',
            'background-color',
            'background-image',
            'background-repeat',
            'background-position',
            'background-position-x',
            'background-position-y',
            'background-size',
            'background-clip',
            'background-origin',
            'background-attachment',
            'background-blend-mode',
            'outline',
            'outline-width',
            'outline-style',
            'outline-color',
            'outline-offset',
            'box-shadow',
            'box-decoration-break',
            'transform',
            'transform-origin',
            'transform-style',
            'backface-visibility',
            'perspective',
            'perspective-origin',
            'visibility',
            'cursor',
            'opacity',
            'filter',
            'isolation',
            'backdrop-filter',
            'mix-blend-mode',
          ],
        },
        // Typography
        {
          emptyLineBefore: 'threshold',
          properties: [
            'color',
            'font',
            'font-style',
            'font-variant',
            'font-weight',
            'font-stretch',
            'font-size',
            'font-family',
            'font-size-adjust',
            'font-effect',
            'font-emphasize',
            'font-emphasize-position',
            'font-emphasize-style',
            'font-smooth',
            'line-height',
            'direction',
            'letter-spacing',
            'white-space',
            'text-align',
            'text-align-last',
            'text-transform',
            'text-decoration',
            'text-emphasis',
            'text-emphasis-color',
            'text-emphasis-style',
            'text-emphasis-position',
            'text-indent',
            'text-justify',
            'text-outline',
            'text-wrap',
            'text-overflow',
            'text-overflow-ellipsis',
            'text-overflow-mode',
            'text-orientation',
            'text-shadow',
            'vertical-align',
            'word-wrap',
            'word-break',
            'word-spacing',
            'overflow-wrap',
            'tab-size',
            'hyphens',
            'unicode-bidi',
            'columns',
            'column-count',
            'column-fill',
            'column-gap',
            'column-rule',
            'column-rule-color',
            'column-rule-style',
            'column-rule-width',
            'column-span',
            'column-width',
            'page-break-after',
            'page-break-before',
            'page-break-inside',
            'src',
          ],
        },
        // Animation
        {
          emptyLineBefore: 'threshold',
          properties: [
            'transition',
            'transition-delay',
            'transition-timing-function',
            'transition-duration',
            'transition-property',
            'animation',
            'animation-name',
            'animation-duration',
            'animation-play-state',
            'animation-timing-function',
            'animation-delay',
            'animation-iteration-count',
            'animation-direction',
            'animation-fill-mode',
          ],
        },
        // Misc
        {
          emptyLineBefore: 'threshold',
          properties: [
            'alignment-baseline',
            'baseline-shift',
            'dominant-baseline',
            'text-anchor',
            'writing-mode',
            'appearance',
            'clip-path',
            'counter-reset',
            'counter-increment',
            'resize',
            'user-select',
            'nav-index',
            'nav-up',
            'nav-right',
            'nav-down',
            'nav-left',
            'pointer-events',
            'touch-action',
            'will-change',
            'zoom',
            'fill',
            'fill-opacity',
            'fill-rule',
            'clip-rule',
            'stroke',
            'stroke-dasharray',
            'stroke-dashoffset',
            'stroke-linecap',
            'stroke-linejoin',
            'stroke-miterlimit',
            'stroke-opacity',
            'stroke-width',
            'color-interpolation',
            'color-interpolation-filters',
            'color-profile',
            'color-rendering',
            'flood-color',
            'flood-opacity',
            'image-rendering',
            'lighting-color',
            'marker-start',
            'marker-mid',
            'marker-end',
            'mask',
            'shape-rendering',
            'stop-color',
            'stop-opacity',
          ],
        },
      ],
      {
        unspecified: 'bottomAlphabetical',
        emptyLineBeforeUnspecified: 'always',
        emptyLineMinimumPropertyThreshold: 12,
      },
    ],
    // general
    'max-nesting-depth': 3,
    'no-extra-semicolons': true,
    'no-unknown-animations': true,
    'rule-empty-line-before': 'always',
    'no-eol-whitespace': true,
    'color-named': 'never',
    'color-hex-case': 'lower',
    'value-keyword-case': 'lower',
    'value-list-comma-newline-after': 'never-multi-line',
    'value-list-comma-newline-before': 'never-multi-line',
    'value-list-comma-space-after': 'always',
    'value-list-comma-space-before': 'never',
    'value-list-max-empty-lines': 0,


    // font
    'font-family-no-duplicate-names': true,
    'font-family-no-missing-generic-family-keyword': true,
    'font-family-name-quotes': 'always-where-recommended',
    'font-weight-notation': 'named-where-possible',


    // function
    'function-name-case': 'lower',
    'function-parentheses-newline-inside': 'never-multi-line',
    'function-parentheses-space-inside': 'never',
    'function-whitespace-after': 'always',
    // function ==>> url()
    'function-url-quotes': 'never',
    'function-url-no-scheme-relative': true,
    'function-url-scheme-whitelist': ['data', '/^http/'],
    // function ==>> calc()
    'function-calc-no-invalid': true,
    'function-calc-no-unspaced-operator': true,
    // function ==>> linear-gradient()
    'function-linear-gradient-no-nonstandard-direction': true,
    // functiong ==>> comma between parameters
    'function-comma-newline-after': 'never-multi-line',
    'function-comma-newline-before': 'never-multi-line',
    'function-comma-space-after': 'always',
    'function-comma-space-before': 'never',


    // string
    'string-no-newline': true,
    'string-quotes': 'single',


    // unit
    'unit-no-unknown': true,
    'unit-case': 'lower',
    'number-leading-zero': 'never',
    'number-no-trailing-zeros': true,
    'length-zero-no-unit': true,


    // property
    'property-case': 'lower',
    'property-no-unknown': [true, { ignoreProperties: [] }],
    'shorthand-property-no-redundant-values': true,
    // property ==>> custom property
    'custom-property-pattern': 'nix-.+',
    'custom-property-empty-line-before': 'never',


    // keyframe
    'keyframe-declaration-no-important': true,
    'keyframes-name-pattern': 'nix-.+',


    // selector
    'selector-pseudo-class-no-unknown': true,
    'selector-pseudo-element-no-unknown': true,
    'selector-type-no-unknown': [true, { ignore: ['custom-elements'] }],
    'no-duplicate-selectors': true,
    'selector-max-combinators': 2,
    'selector-max-compound-selectors': 3,
    'selector-max-empty-lines': 0,
    'selector-max-universal': 1,
    'selector-attribute-brackets-space-inside': 'never',
    'selector-attribute-operator-space-after': 'never',
    'selector-attribute-operator-space-before': 'never',
    'selector-attribute-quotes': 'always',
    'selector-combinator-space-after': 'always',
    'selector-combinator-space-before': 'always',
    'selector-descendant-combinator-no-non-space': true,
    'selector-pseudo-class-case': 'lower',
    'selector-pseudo-element-case': 'lower',
    'selector-pseudo-class-parentheses-space-inside': 'never',
    'selector-pseudo-element-colon-notation': 'double',
    'selector-type-case': 'lower',
    'selector-list-comma-newline-after': 'always',
    'selector-list-comma-newline-before': 'never-multi-line',
    'selector-list-comma-space-before': 'never',


    // declaration
    'block-no-empty': true,
    'no-descending-specificity': true,
    'declaration-block-single-line-max-declarations': 1,
    'declaration-block-no-duplicate-properties': true,
    'declaration-block-no-shorthand-property-overrides': true,
    'declaration-block-no-redundant-longhand-properties': true,
    'declaration-empty-line-before': 'never',
    'declaration-colon-newline-after': 'always-multi-line',
    'declaration-colon-space-after': 'always-single-line',
    'declaration-colon-space-before': 'never',
    // declaration semicolon
    'declaration-block-semicolon-newline-after': 'always-multi-line',
    'declaration-block-semicolon-newline-before': 'never-multi-line',
    'declaration-block-semicolon-space-before': 'never',
    'declaration-block-trailing-semicolon': 'always',
    // declaration brace
    'block-closing-brace-empty-line-before': 'never',
    'block-closing-brace-newline-after': 'always',
    'block-closing-brace-newline-before': 'always-multi-line',
    'block-closing-brace-space-before': 'always-single-line',
    'block-opening-brace-newline-after': 'always-multi-line',
    'block-opening-brace-space-after': 'always-single-line',
    'block-opening-brace-space-before': 'always',
    // declaration important
    'declaration-no-important': true,
    'declaration-bang-space-after': 'never',
    'declaration-bang-space-before': 'always',


    // media
    'media-feature-name-no-unknown': true,
    'media-feature-colon-space-after': 'always',
    'media-feature-colon-space-before': 'never',
    'media-feature-name-case': 'lower',
    'media-feature-parentheses-space-inside': 'never',
    'media-feature-range-operator-space-after': 'always',
    'media-feature-range-operator-space-before': 'always',
    'media-query-list-comma-newline-after': 'always',
    'media-query-list-comma-newline-before': 'never-multi-line',
    'media-query-list-comma-space-before': 'never',


    // at-rule
    'at-rule-empty-line-before': 'always',
    'at-rule-name-case': 'lower',
    'at-rule-name-newline-after': 'always-multi-line',
    'at-rule-name-space-after': 'always-single-line',
    'at-rule-semicolon-newline-after': 'always',
    'at-rule-semicolon-space-before': 'never',
    'no-duplicate-at-import-rules': true,


    // comment
    'comment-no-empty': true,
    'comment-empty-line-before': ['always', { except: ['first-nested'], ignore: ['after-comment', 'stylelint-commands'] }],
    'comment-whitespace-inside': 'always',
  },
}
